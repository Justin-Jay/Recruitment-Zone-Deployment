version: '3.8'

services:
  recruitment-zone-application:
    image: justinmaboshego/recruitmentzone:latest
    ports:
      - "8080:8080"
    networks:
      - traefik-recruitmentzone
    volumes:
      - recruitment-zone-application-logs-vol:/RecruitmentZoneApplication/Logs
     # - recruitment-zone-application-files-vol:/RecruitmentZoneApplication/Files
      - gluster_data_volume:/RecruitmentZoneApplication/Files
    env_file:
      - ./var/recruitmentzone.env
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.role != manager ]
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      #update_config:
      #  parallelism: 2
      #  delay: 10s
      #  order: stop-first
    labels:
      - "traefik.enable: true"
      - "traefik.http.routers.recruitmentzone.rule=Host('recruitmentzone.co.za')"
      - "traefik.http.services.my-container-service.loadbalancer.server.port=8080"

  traefik:
    image: traefik:v2.10.4
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
      # -- (Optional) Enable Dashboard, don't do in production
      - "8080:8080"
    volumes:
      - ./traefik-config:/etc/traefik
      - traefik_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --providers.docker=true
      - --api=true
      - --certificatesresolvers.letsencrypt.acme.email=${CF_API_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=0
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      # !IMPORTANT - COMMENT OUT THE FOLLOWING LINE IN PRODUCTION!
      #- --certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    env_file:
      - ./var/traefik.env
    networks:
      - traefik-network
      - traefik-recruitmentzone
    deploy:
      placement:
        constraints: [ node.role == manager ]
      mode: global
      restart_policy:
        condition: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefik-dashboard.recruitmentzone.co.za`)"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_USER}:${TRAEFIK_PASSWORD}"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik-dashboard.recruitmentzone.co.za`)"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main=recruitmentzone.co.za"
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.recruitmentzone.co.za"
      #- "traefik.http.routers.traefik-secure.service=api@internal"

volumes:
  recruitment-zone-application-logs-vol:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /RecruitmentZoneApplication/Logs
 # recruitment-zone-application-files-vol:
  #  driver: local
   # driver_opts:
    #  type: none
     # o: bind
      #device: /RecruitmentZoneApplication/Files
  gluster_data:
    driver: local
    driver_opts:
      type: glusterfs
      o: addr=localhost
      device: /RecruitmentZoneApplication/Files

networks:
#  proxy:
 #   driver: overlay
  #  name: proxy
#  traefik-recruitmentzone:
 #   driver: overlay
 #   driver_opts:
  #    encrypted: 'true'
      # since we're passing SSL certs over TCP, lets IPSec
  portainer_network:
    driver: overlay
    attachable: true